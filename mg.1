.\"	$OpenBSD: mg.1,v 1.139 2024/07/10 05:19:02 jmc Exp $
.\" This file is in the public domain.
.\"
.Dd $Mdocdate: July 10 2024 $
.Dt mg 1
.Os mg portable
.Sh Name
.Nm mg
.Nd Emacs-like text editor
.Sh Synopsis
.Nm mg
.Op Fl nR
.Op Fl f Ar mode-command
.Op Fl u Ar startup-file
.Op Li + Ns Ar line-number
.Op Ar
.Pp
.Nm mg
.Op Fl nR
.Op Fl b Ar batch-file
.Op Fl f Ar mode-command
.Op Li + Ns Ar line-number
.Sh Description
.Nm
is intended to be a small, fast, and portable editor for
people who can't (or don't want to) run Emacs for one
reason or another, or are not familiar with the
.Xr vi 1
editor.
It is compatible with Emacs because there shouldn't
be any reason to learn more editor types than Emacs and
.Xr vi 1 .
Options are as follows.
.Bl -tag -width Ds
.It Li + Ns Ar n
Start editing the first
.Va file
at line
.Va n
instead of line 1.
(Do not insert a space between the plus sign and
.Va n Ns .) \&
If
.Va n
is negative,
it is reckoned backward from end of the file;
that is,
.Dq +\-1
starts editing at the last line,
.Dq +\-2
the next to last,
and so on.
.It Fl b Ar bf
Operate in batch mode:
interpret contents of file
.Ar bf
as
.Nm
commands,
one per line,
then exit.
.It Fl f Ar cmd
Run the
.Nm
command
.Ar cmd
in all initially opened buffers:
those created from operands on the command line,
and the scratch buffer.
.Fl f
is typically used to run a command ending in
.Dq \-mode .
.It Fl n
Disable backup file generation.
.It Fl R
Open each
.Va file
operand
(or file loaded by a
.Va batch-file
or
.Va startup-file )
read-only.
.It Fl u Ar sf
Use
.Ar sf
as the startup file.
.El
.Ss "Files, buffers, and windows"
.Nm
implements a simple text windowing system on the terminal screen.
The editor loads a file by storing its contents in a
.Em buffer
that accumulates changes and by creating a
.Em window ,
a view of that buffer.
Only one window at a time receives keyboard input.
A buffer named
.Dq *scratch*
always exists;
.Nm
shows a window on it if no others exist.
The editor creates new windows by stacking them from top to bottom:
all windows have the same width but may differ in height.
Below all windows is the single-line
.Em minibuffer ,
which reports messages from the editor and updates as
.Nm
commands collect input.
.Pp
.Nm
requires a terminal display of a minimum height in lines,
increasing with the number of windows in use.
A message in the minibuffer advises when this requirement is not met;
if possible,
resize the terminal to satisfy it.
.Nm
exits if the number of lines in the display falls to 1.
.Pp
Windows can be deleted and buffers saved or
.Em killed
(abandoned).
If a file changes outside
.Nm
and its buffer also has pending changes,
attempting to save it
prompts whether the buffer's changes should supersede the changes
on disk
.Pf ( Sq y ) ,
the save should be canceled
.Pf ( Sq n ) ,
or the buffer should revert
.Pf ( Sq r )
to the new contents of the file on disk.
Naming a buffer with asterisks
.Pf ( Sq * )
at the beginning and end marks it as
.Em discardable :
.Nm
does not prompt to save changes to it when it is killed.
.Ss Modeline
Each window has a
.Em modeline ,
a row of hyphen-minus signs
.Pf ( Sq \- Ns
),
rendered in reverse video if the terminal is capable.
From left to right,
it lists the buffer's modification status
.Pf ( Sq \-\- Ns
: unchanged,
.Sq ** Ns
: changed,
.Sq %% Ns
: read-only);
the editor's name;
the buffer's name;
a parenthesized list of enabled modes;
and the line and column numbers of the cursor's location in the buffer
(if enabled with
.Ic line\-number-mode
and
.Ic column\-number-mode ,
respectively).
If room on the screen is insufficient to present this information,
the rightmost column is populated with a dollar sign
.Sq $ .
.Ss "Keyboard usage"
.Nm
uses Emacs names for non-graphic keycap engravings on the alphabetic
section of the keyboard.
.Dq ESC
is Escape,
.Dq TAB
is Tab,
.Dq RET
is Return or Enter,
.Dq SPC
is the space bar,
and
.Dq DEL
is the key at the upper right that performs a destructive
backspace.
(If your backspace key brings up a help prompt instead,
see
.Ic bsmap\-mode
below.)
Function keys,
arrow keys,
editing keys
(such as Insert and Home),
and the numeric keypad are handled in terms of terminal escape
sequences;
these typically begin with
.Ql "ESC [" .
.Pp
A modifier can apply to a key stroke.
The notation
.Dq C\- Ns Em x
indicates use of Control and
.Em x
together.
Emacs supports a modifier key called
.Dq Meta ,
which often corresponds to a key engraved with
.Dq Alt
or
.Dq Option ;
hence the notation
.Dq M\- Ns Em x .
Pressing and releasing ESC before
.Em x
is equivalent to
.Pf M\- Em x .
(If you would prefer to use the meta key to enter character codes with
the eighth bit set,
and your terminal is configured to support doing so,
see
.Ic meta\-key\-mode
below.
.Do ESC Em x Dc
will continue to run an
.Nm
command.)
.Pp
A key stroke inserts its corresponding character in the window at
the cursor location unless
it is
.Em bound
to an
.Nm
command.
A key binding can be a sequence of multiple key strokes.
When a key sequence does not completely specify a command,
.Nm
updates the minibuffer with the key strokes seen so far to cue the user
for additional input.
(This update occurs after a brief delay to avoid frustrating fast
typists in slow environments.)
Some
.Nm
commands like
.Ic find\-file
require further information,
and populate the minibuffer with a prompt immediately.
The
.Ic keyboard\-quit
command cancels a minibuffer prompt or incomplete key sequence,
writing
.Dq Quit
to the minibuffer.
By default,
it is bound to sequences ending in C\-g.
.Pp
When a prompt is in the minibuffer,
TAB attempts completion:
any input already typed is treated as a
.Em prefix .
.Nm
expands an unambiguous prefix until it completes or becomes ambiguous
again;
in the latter case,
TAB brings up a
.Dq *Completion*
buffer listing possible matches.
Continue typing to disambiguate;
RET accepts the expansion.
Cancel completion at any time with C\-g.
.Pp
The
.Ic define\-key
command permits existing bindings to be replaced and new ones defined;
typically,
it is used in the startup file rather than interactively.
In interactive use,
a temporary
.Em keyboard macro
can be defined to automate a repetitious sequence of key strokes;
it is discarded when replaced or when
.Nm
exits.
.Ss Motion
The most basic motion commands move the cursor within the window by
columns or lines;
these are
.Ic backward\-char ,
.Ic forward\-char ,
.Ic previous\-line ,
and
.Ic next\-line .
By default these are bound to the arrow keys,
and to
C\-b,
C\-f,
C\-p,
and
C\-n,
respectively.
.Pp
Other commands offer motion by different units
(words,
sentences,
paragraphs,
pages).
.Pp
Most motion commands take a numeric parameter,
multiplying their effect for speed and efficiency;
see subsection
.Sx "Editor commands"
below.
Motion halts at buffer boundaries;
for example,
using
.Dq "C\-u 5000 C\-n"
to move forward five thousand lines in a one-hundred-line buffer moves
to the end of it.
.Ss "Point, mark, and region"
Emacs names the cursor location
.Dq Em point .
Another location named
.Dq Em mark
implicitly defines a
.Em region
containing all text between it and point,
inclusively.
Deleting the character at mark does not move mark.
.Pp
.Em Note :
Point and mark are window-specific in
.Nm ,
not buffer-specific as in other Emacs flavors.
.Ss "Delete, kill, yank, and undo"
Emacs distinguishes
.Em delete
and
.Em kill
operations applied to text;
both can be undone,
but killed text is saved into a
.Em "kill zone"
for a possible later
.Em yank
operation,
which inserts it at point.
Yanking does not empty the kill zone,
but a subsequent kill operation replaces its contents.
.Pp
.Em Note :
.Nm
lacks the
.Dq "kill ring"
of GNU Emacs.
.Ss "Backup files"
By default,
before
.Nm
saves modifications to a file,
it makes a copy of the existing version.
The
.Ic make\-backup\-files
command toggles this behavior.
.Nm
renames the existing file to append a
.Sq \[ti]
character to the file name.
.Pp
The
.Ic backup\-to\-home\-directory
command toggles a behavior such that the editor backs up to
.Pa \[ti]/.mg.d
instead,
further renaming files to retain uniqueness.
When
.Nm
is launched by other programs,
this practice can lead to clutter;
the
.Ic leave\-tmpdir\-backups
command toggles an override applicable only to editing of files in
.Pa /tmp .
.Ss "Directory editor"
.Nm
implements a version of GNU Emacs's
.Em dired
mode for navigating and updating the file system from within the editor.
This mode uses an alternative
.Em keymap ,
a specialized set of key bindings partially replacing the default,
or
.Em fundamental ,
bindings.
.Ss "Tag support"
.Nm
uses
.Em tags
files created by
.Xr ctags 1
if available,
allowing fast location of object definitions.
The file must be in the format described by
.\" Neither groff 1.23.0 nor mandoc 1.14.6 recognize this `St` argument.
.\".St -p1003.1-2017 ,
IEEE Std 1003.1-2017
.Pf ( Dq POSIX.1 ) ,
not one of the alternatives.
See
.Ic find\-tag ,
.Ic pop\-tag\-mark ,
and
.Ic visit\-tags\-table .
.Ss "cscope support"
.Nm
supports source code navigation using
.Xr cscope 1 .
.Nm
requires its executable and that of
.Xr cscope\-indexer 1
to be present in
.Ev PATH
for the feature to work.
See sections
.Dq Xr cscope No key bindings
and
.Dq Xr cscope No commands
below.
.Ss "Editor commands"
Invoke a command by its key binding,
or by its name when prompted by
.Ic execute\-extended\-command
(M\-x).
Not all commands are bound by default.
.Pp
Many commands take an optional numeric
.Em parameter ,
an integer
.Va n ,
assembled from
.Pf M\- Ns Va d
key strokes before the command,
where
.Va d
is a numeral from 0 to 9
(a
.Ic digit\-argument ) ,
or by one or more invocations of
.Ic universal\-argument
(C\-u).
.Nm
displays the parameter
(after a delay)
in the minibuffer;
see subsection
.Sx "Keyboard usage"
above.
.Va n
defaults to 1 except for toggles
(see below)
and where otherwise noted.
.Pp
A parameter can be made negative with
.Ic negative\-argument
(\%M\-\-; meta-dash)
or with the unmodified \- key after C\-u or a
.Ic digit\-argument .
(You can also repeat \- or \%M\-\- to toggle the sign if you change your
mind.)
Where a negative parameter makes sense,
it may alter the direction of the operation
(moving,
scrolling,
killing,
and so forth);
thus,
the sequence
.Dq "\%C\-u \- 5 \%C\-f"
moves 5 characters
.Em backward .
Given a nonsense parameter,
an
.Nm
command ignores it and may report an error in the minibuffer.
.Pp
Parameters are commonly used with commands that configure an
.Nm
setting,
as with
.Ic make\-backup\-files .
Many settings are of Boolean sense.
With no parameter,
the setting is inverted.
With a positive parameter,
the setting is enabled.
Otherwise,
it is disabled.
For brevity,
a command with this behavior is described below as a
.Dq toggle .
A few settings take an integer value,
for which they prompt if not given a parameter.
.Ss "Editor key bindings"
The fundamental keymap resembles that of GNU Emacs.
Unlike that program,
in
.Nm
the ordinary input keys
(letters,
numerals,
and punctuation)
are not explicitly bound to
.Ic self\-insert\-command ,
but behave as if they were.
(See
.Ic auto\-fill\-mode ,
however.)
.Pp
The command
.Dq M\-x describe\-bindings
summarizes the bindings in effect at any time.
.Pp
.Bl -tag -width "C\-x 4 C\-f" -offset indent -compact
.It C\-SPC
set\-mark\-command
.It C\-a
beginning\-of\-line
.It C\-b
backward\-char
.It C\-d
delete\-char
.It C\-e
end\-of\-line
.It C\-f
forward\-char
.It C\-g
keyboard\-quit
.It C\-h C\-g
keyboard\-quit
.It C\-h C\-h
help\-help
.It C\-h a
apropos
.It C\-h b
describe\-bindings
.It C\-h c
describe\-key\-briefly
.It C\-j
newline\-and\-indent
.It C\-k
kill\-line
.It C\-l
recenter
.It RET
newline
.It C\-n
next\-line
.It C\-o
open\-line
.It C\-p
previous\-line
.It C\-q
quoted\-insert
.It C\-r
isearch\-backward
.It C\-s
isearch\-forward
.It C\-t
transpose\-chars
.It C\-u
universal\-argument
.It C\-v
scroll\-up
.It C\-w
kill\-region
.It C\-x C\-b
list\-buffers
.It C\-x C\-c
save\-buffers\-kill\-emacs
.It C\-x C\-f
find\-file
.It C\-x C\-j
dired\-jump
.It C\-x C\-g
keyboard\-quit
.It C\-x C\-l
downcase\-region
.It C\-x C\-o
delete\-blank\-lines
.It C\-x C\-q
toggle\-read\-only
.It C\-x C\-r
find\-file\-read\-only
.It C\-x C\-s
save\-buffer
.It C\-x C\-u
upcase\-region
.It C\-x C\-v
find\-alternate\-file
.It C\-x C\-w
write\-file
.It C\-x C\-x
exchange\-point\-and\-mark
.It C\-x (
start\-kbd\-macro
.It C\-x \&)
end\-kbd\-macro
.It C\-x 0
delete\-window
.It C\-x 1
delete\-other\-windows
.It C\-x 2
split\-window\-vertically
.It C\-x 4 C\-f
find\-file\-other\-window
.It C\-x 4 C\-g
keyboard\-quit
.It C\-x 4 b
switch\-to\-buffer\-other\-window
.It C\-x 4 f
find\-file\-other\-window
.It C\-x =
what\-cursor\-position
.It C\-x \[ha]
enlarge\-window
.It C\-x \[ga]
next\-error
.It C\-x b
switch\-to\-buffer
.It C\-x d
dired
.It C\-x e
call\-last\-kbd\-macro
.It C\-x f
set\-fill\-column
.It C\-x g
goto\-line
.It C\-x h
mark\-whole\-buffer
.It C\-x i
insert\-file
.It C\-x k
kill\-buffer
.It C\-x n
other\-window
.It C\-x o
other\-window
.It C\-x p
previous\-window
.It C\-x s
save\-some\-buffers
.It C\-x u
undo
.It C\-y
yank
.It C\-z
suspend\-emacs
.It C\-_
undo
.It M\-C\-v
scroll\-other\-window
.It M\-SPC
just\-one\-space
.It M\-!
shell\-command
.It M\-%
query\-replace
.It M\-*
pop\-tag\-mark
.It M\-\-
negative\-argument
.It M\-.
find\-tag
.It M\-0
digit\-argument
.It M\-1
digit\-argument
.It M\-2
digit\-argument
.It M\-3
digit\-argument
.It M\-4
digit\-argument
.It M\-5
digit\-argument
.It M\-6
digit\-argument
.It M\-7
digit\-argument
.It M\-8
digit\-argument
.It M\-9
digit\-argument
.It M\-<
beginning\-of\-buffer
.It M\->
end\-of\-buffer
.It M\-\e
delete\-horizontal\-space
.It M\-\[ha]
join\-line
.It M\-b
backward\-word
.It M\-c
capitalize\-word
.It M\-d
kill\-word
.It M\-f
forward\-word
.It M\-h
mark\-paragraph
.It M\-l
downcase\-word
.It M\-m
back\-to\-indentation
.It M\-q
fill\-paragraph
.It M\-r
search\-backward
.It M\-s
search\-forward
.It M\-t
transpose\-words
.It M\-u
upcase\-word
.It M\-v
scroll\-down
.It M\-w
copy\-region\-as\-kill
.It M\-x
execute\-extended\-command
.It M\-z
zap\-to\-char
.It M\-{
backward\-paragraph
.It M\-|
shell\-command\-on\-region
.It M\-}
forward\-paragraph
.It M\-\[ti]
not\-modified
.It M\-DEL
backward\-kill\-word
.It )
blink\-and\-insert
.It ]
blink\-and\-insert
.It }
blink\-and\-insert
.It DEL
delete\-backward\-char
.El
.Ss "Command List"
Terms not already discussed above are introduced in
.Em italics .
.Bl -tag -width xxxxx
.It Ic apropos
Prompt for a pattern,
then list,
in the
.Dq *help*
buffer,
all
.Nm
command names matching it.
.It Ic audible\-bell
Toggle use of the audible system or terminal bell.
See
.Ic visible\-bell .
.It Ic auto\-execute
Register an automatic execution hook;
prompt for a
.Xr glob 3
pattern and an
.Nm
command to run when the editor loads a file with a name matching that
pattern into a buffer.
.It Ic auto\-fill\-mode
Toggle the buffer's auto-fill mode
(sometimes called mail-mode).
When enabled,
.Nm
treats unbound keys as if they were bound to
.Ic insert\-with\-wrap .
.Pf ( Dq "Auto-fill mode"
is a misnomer;
it automatically
.Em breaks
lines rather than
.Em filling
them.
See
.Ic fill\-paragraph . )
.It Ic auto\-indent\-mode
Toggle the buffer's indent mode.
When enabled and a newline is inserted,
.Nm
copies any spaces or tabs indenting the breaking line to the new line.
.It Ic back\-to\-indentation
Move point to the first character on the line that is not a space or
tab.
.It Ic backup\-to\-home\-directory
Save backup files to a
.Pa \[ti]/.mg.d
directory instead of that of the edited file;
requires
.Ic make\-backup\-files
to be enabled.
.It Ic backward\-char
Move point backward
.Va n
characters.
.It Ic backward\-kill\-word
Kill
.Va n
words before point,
counting the word point is on
(if not at its first character),
if any.
A
.Em word
is delimited by a buffer boundary or any character that is not a letter,
numeral,
dollar sign,
percent sign,
or apostrophe.
.It Ic backward\-paragraph
Move point backward to the character before the
.Va n Ns th
previous paragraph,
counting any paragraph point is on.
A
.Em paragraph
is delimited by a buffer boundary or a newline followed by another
newline.
.It Ic backward\-word
Move point backward to the beginning of the
.Va n Ns th
previous word,
counting the word point is on if not at its first character.
.It Ic beginning\-of\-buffer
Move point
.Va n
tenths
(by line count)
from the beginning of the buffer.
The default
.Va n
is 0.
If mark is not already set,
.Nm
sets it before moving point.
.It Ic beginning\-of\-line
Move point to the beginning of the line.
.It Ic blink\-and\-insert
As
.Ic self\-insert\-command ,
then search backward and indicate the inserted character's matching
delimiter.
Parentheses,
brackets,
braces,
and
.Dq "angle brackets"
(less-than and greater-than signs)
match their counterparts,
accounting for nesting;
other characters match themselves.
.\" bsmap-mode is not in GNU Emacs 27.
.It Ic bsmap\-mode
Toggle swapping of the meanings of the DEL and C\-h key strokes.
This feature is a workaround for incorrect
.Xr terminfo 5
terminal descriptions.
If backspacing twice produces a help prompt in the minibuffer and C\-h
destructively backspaces in a window,
enable this setting.
.It Ic c\-mode
Toggle a KNF-compliant mode for editing C program files;
.Xr style 9
describes KNF on
.Fx
and
.Ox
systems.
.It Ic call\-last\-kbd\-macro
Execute the keyboard macro
.Va n
times.
See
.Ic start\-kbd\-macro
and
.Ic end\-kbd\-macro .
.It Ic capitalize\-word
Capitalize characters in
(the remainder of)
any word at point,
and
.Va n
words forward,
counting the word point is on.
In Emacs,
.Em capitalization
converts the first character of a word to upper case,
and subsequent letters to lower case.
.It Ic cd
Change the global working directory.
See
.Ic global\-wd\-mode
and
.Ic pwd .
.It Ic column\-number\-mode
Toggle display of point's column number in the modeline.
.It Ic compile
Prompt for a shell command to build a project,
then execute it.
The prompt is prepopulated with
.Dq make
and a space.
See
.Ic next\-error .
.It Ic copy\-region\-as\-kill
Copy the region to the kill zone without modifying the buffer.
.It Ic count\-matches
Count the number of lines matching the supplied regular expression.
.It Ic count\-non\-matches
Prompt for regular expression and report count of lines not matching it.
See
.Ic count\-matches .
.It Ic define\-key
Prompts the user for a named keymap (mode),
a key, and an
.Nm
command, then creates a keybinding in the appropriate
map.
.It Ic delete\-backward\-char
Delete backwards
.Va n
characters.
Like
.Ic delete\-char ,
this actually does a kill if presented
with an argument.
.It Ic delete\-blank\-lines
Delete blank lines around point.
If point is sitting on a blank line, this command
deletes all the blank lines above and below the current line.
Otherwise, it deletes all of the blank lines after the current line.
.It Ic delete\-char
Delete
.Va n
characters forward.
If any argument is present, it kills rather than deletes,
saving the result in the kill zone.
.It Ic delete\-horizontal\-space
Delete any whitespace around point.
.It Ic delete\-leading\-space
Delete leading whitespace on the current line.
.It Ic delete\-trailing\-space
Delete trailing whitespace on the current line.
.It Ic delete\-matching\-lines
Delete all lines after point that contain a string matching
the supplied regular expression.
.It Ic delete\-non\-matching\-lines
Delete all lines after point that don't contain a string matching
the supplied regular expression.
.It Ic delete\-other\-windows
Make the current window the only window visible on the screen.
.It Ic delete\-window
Delete current window.
.It Ic describe\-bindings
List all global and local keybindings, putting the result in
the *help* buffer.
.It Ic describe\-key\-briefly
Read a key from the keyboard, and look it up in the keymap.
Display the name of the function currently bound to the key.
.It Ic diff\-buffer\-with\-file
View the differences between buffer and its associated file.
.It Ic digit\-argument
Process a numerical argument for keyboard-invoked functions.
.It Ic dired\-jump
Open a dired buffer containing the current buffer's directory location.
.It Ic downcase\-region
Set all characters in the region to lower case.
.It Ic downcase\-word
Set characters to lower case, starting at point, and ending
.Va n
words away.
.It Ic emacs\-version
Return an
.Nm
version string.
.It Ic end\-kbd\-macro
Stop defining a keyboard macro.
.It Ic end\-of\-buffer
Move point
.Va n
tenths
(by line count)
from the end of the buffer.
The default
.Va n
is 0.
If mark is not already set,
.Nm
sets it before moving point.
.It Ic end\-of\-line
Move cursor to the end of the line.
.It Ic enlarge\-window
Enlarge the current window by shrinking either the window above
or below it.
.It Ic eval\-current\-buffer
Evaluate the current buffer as a series of
.Nm
commands.
Useful for testing
.Nm
startup files.
.It Ic eval\-expression
Get one line from the user, and run it.
Useful for testing expressions in
.Nm
startup files.
.It Ic exchange\-point\-and\-mark
Swap the values of "point" and "mark" in the current window.
Return an error if no mark is set.
.It Ic execute\-extended\-command
Invoke an extended command;
that is,
M\-x.
Call the message line routine to read in the command name and apply
autocompletion to it.
When it comes back, look the name up in the symbol table and run the
command if it is found, passing arguments as necessary.
Print an error if there is anything wrong.
.It Ic fill\-paragraph
Justify a paragraph, wrapping text at the current fill column.
.It Ic find\-alternate\-file
Replace the current file with an alternate one.
Semantics for finding the replacement file are the same as
.Ic find\-file ,
except the current buffer is killed before the switch.
If the kill fails, or is aborted, revert to the original file.
.It Ic find\-file
Select a file for editing.
First check if the file can be found
in another buffer; if it is there, just switch to that buffer.
If the file cannot be found, create a new buffer, read in the
file from disk, and switch to the new buffer.
.It Ic find\-file\-read\-only
Same as
.Ic find\-file ,
except the new buffer is set to read-only.
.It Ic find\-file\-other\-window
Opens the specified file in a second buffer.
Splits the current window if necessary.
.It Ic find\-tag
Jump to definition of tag at point.
.It Ic forward\-char
Move point forward
.Va n
characters.
.It Ic forward\-paragraph
Move point forward to the character after the
.Va n Ns th
subsequent paragraph,
counting any paragraph point is on.
See
.Ic backward\-paragraph .
.It Ic forward\-word
Move point forward to the character after the
.Va n Ns th
subsequent word,
counting any word point is on.
.It Ic global\-set\-key
Bind a key in the global (fundamental) key map.
.It Ic global\-unset\-key
Unbind a key from the global (fundamental) key map;
that is,
set it to 'rescan'.
.It Ic global\-wd\-mode
Toggle global working-directory mode.
When enabled,
.Nm
defaults to opening files (and executing commands like
.Ic compile
and
.Ic grep )
relative to the global working directory.
When disabled, a working directory is set for each buffer.
.It Ic goto\-line
Go to a specific line.
If an argument is present, then
it is the line number, else prompt for a line number to use.
.It Ic grep
Prompt for a shell command to search files for a regular expression,
then execute it.
The prompt is prepopulated with
.Dq "grep \-n"
and a space.
See
.Ic next\-error .
.It Ic help\-help
Prompts for one of (a)propos, (b)indings, des(c)ribe key briefly.
.It Ic insert
Insert a string, mainly for use from macros.
.It Ic insert\-buffer
Insert the contents of another buffer at point.
.It Ic insert\-file
Insert a file into the current buffer at point.
.It Ic insert\-with\-wrap
Insert the bound character with word wrap.
Check to see if we're past the fill column, and if so,
justify this line.
.It Ic isearch\-backward
Use incremental searching, initially in the reverse direction.
isearch ignores any explicit arguments.
If invoked during macro definition or evaluation, the non-incremental
.Ic search\-backward
is invoked instead.
.It Ic isearch\-forward
Use incremental searching, initially in the forward direction.
isearch ignores any explicit arguments.
If invoked during macro definition or evaluation, the non-incremental
.Ic search\-forward
is invoked instead.
.It Ic join\-line
Join the current line to the previous.
If called with an argument,
join the next line to the current one.
.It Ic just\-one\-space
Delete any whitespace around point, then insert a space.
.It Ic keyboard\-quit
Abort the current action.
.It Ic kill\-buffer
Dispose of a buffer, by name.
If the buffer name does not start and end with an asterisk,
prompt the user if the buffer
has been changed.
.It Ic kill\-line
Kill line.
If called without an argument, it kills from point to the end
of the line, unless it is at the end of the line, when it kills the
newline.
If called with an argument of 0, it kills from the start of the
line to point.
If called with a positive argument, it kills from point
forward over that number of newlines.
If called with a negative argument,
it kills any text before point on the current line,
then backward
.No \- Ns Va n
lines.
.It Ic kill\-paragraph
Delete
.Va n
paragraphs starting with the current one.
.It Ic kill\-region
Kill the currently defined region.
.It Ic kill\-word
Delete forward
.Va n
words.
.It Ic leave\-tmpdir\-backups
Modifies the behaviour of
.Ic backup\-to\-home\-directory .
Backup files that would normally reside in
.Pa /tmp
are left there and not moved to the
.Pa \[ti]/.mg.d
directory.
.It Ic line\-number\-mode
Toggle display of point's line number in the modeline.
.It Ic list\-buffers
Display the list of available buffers.
The first column in the output indicates which buffer is active with a '>'
character.
The second column indicates which buffers are modified.
The third column indicates which buffers are read-only.
The remaining columns are self-explanatory.
.It Ic load
Prompt the user for a filename, and then execute commands
from that file.
.It Ic local\-set\-key
Bind a key mapping in the local (topmost) mode.
.It Ic local\-unset\-key
Unbind a key mapping in the local (topmost) mode.
.It Ic make\-backup\-files
Toggle generation of backup files.
Enabled by default.
.It Ic make\-directory
Prompt the user for a path or directory name which is then created.
.It Ic mark\-paragraph
Mark
.Va n
paragraphs.
.It Ic mark\-whole\-buffer
Marks whole buffer as a region by putting point at the beginning and mark
at the end of buffer.
.It Ic meta\-key\-mode
When disabled, the meta key can be used to insert extended-ascii (8-bit)
characters.
When enabled, the meta key acts as usual.
.It Ic negative\-argument
Process a negative argument for keyboard-invoked functions.
.It Ic newline
Insert a newline into the current buffer.
.It Ic newline\-and\-indent
Insert a newline, then enough tabs and spaces to duplicate the indentation
of the previous line, respecting
.Ic no\-tab\-mode
and the buffer tab width.
.It Ic next\-line
Move forward
.Va n
lines.
.It Ic no\-tab\-mode
Toggle notab mode.
In this mode, spaces are inserted rather than tabs.
Can be set globally with
.Ic set\-default\-mode .
.It Ic not\-modified
Turn off the modified flag in the current buffer.
.It Ic open\-line
Open up some blank space.
Essentially, insert
.Va n
newlines, then back up over them.
.It Ic other\-window
The command to make the next (down the screen) window the current
window.
There are no real errors, although the command does nothing if
there is only 1 window on the screen.
.It Ic overwrite\-mode
Toggle overwrite mode in the current buffer,
where typing overwrites existing characters rather than inserting them.
Can be set globally with
.Ic set\-default\-mode .
.It Ic pop\-tag\-mark
Return to position where find\-tag was previously invoked.
.It Ic prefix\-region
Inserts a prefix string before each line of a region.
The prefix string is settable by using
.Ic set\-prefix\-string
or by invoking this command with a prefix argument.
.It Ic previous\-line
Move backwards
.Va n
lines.
.It Ic previous\-window
This command makes the previous (up the screen) window the
current window.
There are no errors, although the command does not do
a lot if there is only 1 window.
.It Ic push\-shell
Suspend
.Nm
and switch to alternate screen, if available.
.It Ic pwd
Display current (global) working directory in the status area.
.It Ic query\-replace
Query Replace.
Search and replace strings selectively, prompting after each match.
.It Ic query\-replace\-regexp
Replace strings selectively.
Does a search and replace operation using regular
expressions for both patterns.
.It Ic quoted\-insert
Insert the next character verbatim into the current buffer;
that is,
ignore any function bound to that key.
.It Ic re\-search\-again
Perform a regular expression search again, using the same search
string and direction as the last search command.
.It Ic re\-search\-backward
Search backwards using a regular expression.
Get a search string from the user, and search, starting at point
and proceeding toward the front of the buffer.
If found, point is left
pointing at the first character of the pattern [the last character that
was matched].
.It Ic re\-search\-forward
Search forward using a regular expression.
Get a search string from the user and search for it starting at point.
If found, move point to just after the matched characters.
display does all
the hard stuff.
If not found, it just prints a message.
.It Ic recenter
Reposition point in the current window.
By default, point is centered.
If given a positive argument
.Va n ,
the display is repositioned to line
.Va n .
If
.Va n
is negative, it is that line from the bottom.
.It Ic redraw\-display
Refresh the display.
Recomputes all window sizes in case something has changed.
.It Ic replace\-regexp
Replace regular expression globally without individual prompting.
.It Ic replace\-string
Replace string globally without individual prompting.
.It Ic revert\-buffer
Revert the current buffer to the latest file on disk.
.It Ic save\-buffer
Save the contents of the current buffer if it has been changed,
optionally creating a backup copy.
.It Ic save\-buffers\-kill\-emacs
Offer to save modified buffers and quit
.Nm .
.It Ic save\-some\-buffers
Look through the list of buffers, offering to save any buffer that
has been changed.
Buffers that are not associated with files (such
as *scratch*, *grep*, *compile*) are ignored.
.It Ic scroll\-down
Scroll backwards
.Va n
pages.
A two-line overlap between pages is
assumed.
If given a repeat argument, scrolls back lines, not pages.
.It Ic scroll\-one\-line\-down
Scroll the display down
.Va n
lines without changing the cursor position.
.It Ic scroll\-one\-line\-up
Scroll the display
.Va n
lines up without moving the cursor position.
.It Ic scroll\-other\-window
Scroll the next window in the window list window forward
.Va n
pages.
.It Ic scroll\-up
Scroll forward one page.
A two-line overlap between pages is
assumed.
If given a repeat argument, scrolls back lines, not pages.
.It Ic search\-again
Search again, using the same search string and direction as the last
search command.
.It Ic search\-backward
Reverse search.
Get a search string from the user, and search, starting
at point and proceeding toward the front of the buffer.
If found, point is
left pointing at the first character of the pattern (the last character
that was matched).
.It Ic search\-forward
Search forward.
Get a search string from the user, and search for it
starting at point.
If found, point gets moved to just after the matched
characters, if not found, print a message.
.It Ic self\-insert\-command
Insert a character.
.It Ic sentence\-end\-double\-space
Toggle double or single spaces for end of sentences.
Double is the default.
Currently only affects fill\-paragraph.
.It Ic set\-case\-fold\-search
Set case-fold searching, causing case not to matter
in regular expression searches.
This is the default.
.It Ic set\-case\-replace
Preserve the case of the replaced string.
This is the default.
.It Ic set\-default\-mode
Append the supplied mode to the list of default modes
used by subsequent buffer creation.
Built in modes include: fill, indent, notab and overwrite.
.It Ic set\-fill\-column
Prompt the user for a fill column.
Used by
.Ic auto\-fill\-mode .
.It Ic set\-mark\-command
Sets the mark in the current window to the current point location.
.It Ic set\-prefix\-string
Sets the prefix string to be used by the
.Ic prefix\-region
command.
.It Ic set\-tab\-width
Set the tab width for the current buffer, or the default for new buffers
if called with a prefix argument or from the startup file.
.It Ic shell\-command
Execute external command from mini-buffer.
With a universal argument it inserts the command output into the current
buffer.
.It Ic shell\-command\-on\-region
Provide the text in region to the shell command as input.
With a universal argument it replaces the region with the command
output.
.It Ic shrink\-window
Shrink current window by one line.
The window immediately below is expanded to pick up the slack.
If only one window is present, this command has no effect.
.It Ic space\-to\-tabstop
Insert enough spaces to reach the next tab-stop position.
By default, tab-stops occur every 8 characters.
.It Ic split\-window\-vertically
Split the current window.
A window smaller than 3 lines cannot be split.
.It Ic start\-kbd\-macro
Start defining a keyboard macro.
Macro definition is ended by invoking end\-kbd\-macro.
.It Ic suspend\-emacs
Suspend
.Nm
and switch back to alternate screen, if in use.
.It Ic switch\-to\-buffer
Prompt and switch to a new buffer in the current window.
.It Ic switch\-to\-buffer\-other\-window
Switch to buffer in another window.
.It Ic toggle\-read\-only
Toggle the read-only flag on the current buffer.
.It Ic toggle\-read\-only\-all
Toggle the read-only flag on all non-ephemeral buffers.
A simple toggle that switches a global read-only flag either on
or off.
.It Ic transpose\-chars
Transpose the two characters in front of and under point,
then move forward one character.
Treat newline characters the same as any other.
.It Ic transpose\-paragraphs
Transpose adjacent paragraphs.
If multiple iterations are requested, the current paragraph will
be moved
.Va n
paragraphs forward.
.It Ic transpose\-words
Transpose adjacent words.
.It Ic undo
Undo the most recent action.
If invoked again without an intervening command,
move the undo pointer to the previous action and undo it.
.It Ic undo\-boundary
Add an undo boundary.
This is not usually done interactively.
.It Ic undo\-boundary\-toggle
Toggle whether undo boundaries are generated.
Undo boundaries are often disabled before operations that should
be considered atomically undoable.
.It Ic undo\-enable
Toggle whether undo information is kept.
.It Ic undo\-list
Show the undo records for the current buffer in a new buffer.
.It Ic universal\-argument
Repeat the next command 4 times.
Usually bound to C\-u.
This command may be stacked;
for example,
C\-u C\-u C\-f moves the cursor forward 16 characters.
.It Ic upcase\-region
Upper case region.
Change all of the lower case characters in the region to
upper case.
.It Ic upcase\-word
Move the cursor forward by the specified number of words.
As it moves, convert any characters to upper case.
.It Ic visible\-bell
Toggle the visible bell.
If this toggle is on, the modeline will flash.
.It Ic visit\-tags\-table
Load tags file to be used for subsequent
.Ic find\-tag .
.It Ic what\-cursor\-position
Display a bunch of useful information about the current location of
point.
The character under the cursor (in octal), the current line, row,
and column, and approximate position of the cursor in the file (as a
percentage) is displayed.
The column position assumes an infinite
position display; it does not truncate just because the screen does.
.It Ic write\-file
Ask for a file name and write the contents of the current buffer to
that file.
Update the remembered file name and clear the buffer
changed flag.
.It Ic yank
Yank text from the kill zone.
Unlike Emacs, the
.Nm
kill zone consists only
of the most recent kill.
It is not a ring.
.It Ic zap\-to\-char
Ask for a character and delete text from the current cursor position
until the next instance of that character, including it.
.It Ic zap\-up\-to\-char
Like
.Ic zap\-to\-char
but doesn't delete the target character.
.El
.Ss "cscope key bindings"
The default
.Xr cscope
key bindings all begin with
.Dq "C\-c s" ,
which may be taken as a mnemonic for
.Dq "cscope" .
.Pp
.Bl -tag -width "C\-c s X" -offset indent -compact
.It C\-c s c
cscope\-find\-functions\-calling\-this\-function
.It C\-c s d
cscope\-find\-global\-definition
.It C\-c s e
cscope\-find\-egrep\-pattern
.It C\-c s f
cscope\-find\-this\-file
.It C\-c s i
cscope\-find\-files\-including\-file
.It C\-c s n
cscope\-next\-symbol
.It C\-c s p
cscope\-prev\-symbol
.It C\-c s s
cscope\-find\-this\-symbol
.It C\-c s t
cscope\-find\-this\-text\-string
.El
.Ss "cscope commands"
.Xr cscope
commands report progress or results in a buffer named
.Dq *cscope* .
These commands are not implemented in GNU Emacs.
.Pp
.Bl -tag
.It Ic cscope\-create\-list\-of\-files\-to\-index
Prompt for a directory name,
preloading with the parent of the buffer's file,
and run
.Xr cscope
to index it.
Progress is reported to a new buffer
.Dq *cscope* .
.It Ic cscope\-find\-called\-functions
Prompt for function name,
preloading with symbol name at point
(if any),
and list indexed functions called by the named function.
.It Ic cscope\-find\-egrep\-pattern
List locations matching the given extended regular expression pattern.
.It Ic cscope\-find\-files\-including\-file
List files that #include the given filename.
.It Ic cscope\-find\-functions\-calling\-this\-function
List functions calling the given function.
.It Ic cscope\-find\-global\-definition
List global definitions for the given literal.
.It Ic cscope\-find\-this\-file
List filenames matching the given filename.
.It Ic cscope\-find\-this\-symbol
List the matches for the given symbol.
.It Ic cscope\-find\-this\-text\-string
List locations matching the given text string.
.It Ic cscope\-next\-file
Navigate to the next file.
.It Ic cscope\-next\-symbol
Navigate to the next match.
.It Ic cscope\-prev\-file
Navigate to the previous file.
.It Ic cscope\-prev\-symbol
Navigate to the previous match.
.El
.Ss "Directory editor key bindings"
Specific key bindings are available in dired mode.
.Pp
.Bl -tag -width xxxxxxxxxxxxxxxxxx -offset indent -compact
.It DEL
dired\-unmark\-backward
.It RET, e, f and C\-m
dired\-find\-file
.It SPC, n
dired\-next\-line
.It !
dired\-shell\-command
.It +
dired\-create\-directory
.It ^
dired\-up\-directory
.It a
dired\-find\-alternate\-file
.It c
dired\-do\-copy
.It d and C\-d
dired\-flag\-file\-deletion
.It g
dired\-revert
.It j
dired\-goto\-file
.It o
dired\-find\-file\-other\-window
.It p
dired\-previous\-line
.It q
quit\-window
.It r
dired\-do\-rename
.It u
dired\-unmark
.It x
dired\-do\-flagged\-delete
.It C\-v
dired\-scroll\-down
.It M\-v
dired\-scroll\-up
.El
.Ss "Directory editing commands"
The following are a list of the commands specific to dired mode:
.Bl -tag -width Ds
.It Ic dired\-create\-directory
Create a directory.
.It Ic dired\-do\-copy
Copy the file listed on the current line of the dired buffer.
.It Ic dired\-do\-flagged\-delete
Delete the files that have been flagged for deletion.
.It Ic dired\-do\-rename
Rename the file listed on the current line of the dired buffer.
.It Ic dired\-find\-alternate\-file
Replace the current dired buffer with an alternate one as specified
by the position of the cursor in the dired buffer.
.It Ic dired\-find\-file
Open the file on the current line of the dired buffer.
If the cursor is on a directory, it will be opened in dired mode.
.It Ic dired\-flag\-file\-deletion
Flag the file listed on the current line for deletion.
This is indicated in the buffer by putting a D at the left margin.
No files are actually deleted until the function
.Ic dired\-do\-flagged\-delete
is executed.
.It Ic dired\-find\-file\-other\-window
Open the file on the current line of the dired buffer in a
different window.
.It Ic dired\-goto\-file
Move the cursor to a file name in the dired buffer.
.It Ic dired\-next\-line
Move the cursor to the next line.
.It Ic dired\-other\-window
This function works just like dired, except that it puts the
dired buffer in another window.
.It Ic dired\-previous\-line
Move the cursor to the previous line.
.It Ic dired\-revert
Refresh the dired buffer while retaining any flags.
.It Ic dired\-scroll\-down
Scroll down the dired buffer.
.It Ic dired\-scroll\-up
Scroll up the dired buffer.
.It Ic dired\-shell\-command
Pipe the file under the current cursor position through a shell command.
.It Ic dired\-unmark
Remove the deletion flag for the file on the current line.
.It Ic dired\-unmark\-backward
Remove the deletion flag from the file listed on the previous line
of the dired buffer, then move up to that line.
.It Ic dired\-up\-directory
Open a dired buffer in the parent directory.
.It Ic quit\-window
Close the current dired buffer.
.El
.Ss Configuration
There are two configuration files,
.Pa .mg
and
.Pa .mg\-TERM .
Here,
.Ev TERM
represents the name of the terminal type;
for example,
if the terminal type is set to
.Dq vt100 ,
.Nm
will use
.Pa .mg\-vt100
as a startup file.
The terminal type startup file is used first.
.Pp
The startup file format is a list of commands, one per line, as used for
interactive evaluation.
Strings that are normally entered by the user at any subsequent prompts
may be specified after the command name;
for example:
.Bd -literal -offset indent
global\-set\-key ")" self\-insert\-command
global\-set\-key "\e\[ha]x\e\[ha]f" find\-file
global\-set\-key "\ee[Z" backward\-char
set\-default\-mode fill
set\-fill\-column 72
auto\-execute *.c c\-mode
.Ed
.Pp
Comments can be added to the startup files by placing
.Sq ;\&
or
.Sq #
as the first character of a line.
.Sh Environment
.Bl -tag -width SHELL
.It Ev HOME
is searched for startup files.
.It Ev PATH
is searched for the
.Xr cscope 1
and
.Xr cscope\-indexer 1
programs.
.It Ev SHELL
selects the shell used by
.Ic shell\-command
and
.Ic shell\-command\-on\-region .
.It Ev TERM
selects a startup file suffix;
see subsection
.Sx Configuration
above.
.El
.Sh Files
.Bl -tag -width /usr/share/doc/mg/tutorial -compact
.It Pa \[ti]/.mg
normal startup file
.It Pa \[ti]/.mg\-TERM
terminal-specific startup file
.It Pa \[ti]/.mg.d
alternative backup file location
.It Pa /usr/share/doc/mg/tutorial
concise tutorial
.El
.Sh "See also"
.Xr vi 1
.Sh Caveats
Since it is written completely in C, there is currently no
language in which extensions can be written;
however, keys can be rebound and certain parameters can be changed
in startup files.
.Pp
In order to use 8-bit characters (such as German umlauts), the Meta key
needs to be disabled via the
.Ic meta\-key\-mode
command.
.Pp
Multi-byte character sets, such as UTF-8, are not supported.
